[project]
name = "prompts-mcp"
version = "1.6.0"
description = "Model Context Protocol (MCP) server of Markdown based prompts."
authors = [{ name = "Anssi SyrjÃ¤salo", email = "ai@alkue.com" }]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "LGPLv3" }
keywords = ["model-context-protocol", "mcp", "prompts", "ai", "llm"]
classifiers = [
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = ["mcp>=1.14.1"]

[dependency-groups]
dev = ["mypy", "pytest", "pytest-asyncio", "pytest-cov", "pytest-mock", "ruff"]
git = ["commitizen", "pre-commit"]

[project.scripts]
prompts-mcp = "prompts_mcp.main:main"

[project.urls]
Homepage = "https://pypi.org/project/prompts-mcp"
Repository = "https://github.com/alkue-com/prompts-mcp"
Documentation = "https://github.com/alkue-com/prompts-mcp/blob/main/README.md"

[tool.codespell]
skip = "*.json"

[tool.ruff]
line-length = 80

[tool.ruff.lint]
select = [
    "ERA",  # eradicate
    "I",    # isort
    "C90",  # mccabe
    "PERF", # perflint
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "UP",   # pyupgrade
    "BLE",  # flake8-blind-except
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "ICN",  # flake8-import-conventions
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "Q",    # flake8-quotes
]

[tool.ruff.lint.mccabe]
max-complexity = 5

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
strict = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = "tests"
addopts = [
    "-v",
    "--strict-markers",
    "--cov=prompts_mcp",
    "--cov-report=term-missing",
    #    "--cov-report=xml"
    #    "--cov-report=html"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"

[tool.commitizen]
bump_message = "chore: Release $new_version"
prerelease_offset = 1
version_provider = "uv"
version_files = ["prompts_mcp/__init__.py:__version__"]
update_changelog_on_bump = true
changelog_incremental = true
changelog_merge_prerelease = true

[build-system]
requires = ["uv_build>=0.8.18,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "prompts_mcp"
module-root = ""
