name: Setup development

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  devpy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v5

      - name: Install uv (macOS & Linux)
        if: runner.os != 'Windows'
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install uv (Windows)
        if: runner.os == 'Windows'
        run: |
          powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"

      - name: Install .python-version
        run: |
          uv python install

      - name: Start server (macOS & Linux)
        if: runner.os != 'Windows'
        run: |
          export PROMPTS_DIR="$(pwd)/tests/test_prompts"

          # Create empty log file first
          touch server.log

          # Start server in background and append to log file
          uv run prompts-mcp >> server.log 2>&1 &
          SERVER_PID=$!

          # Wait up to 10 seconds for all required log messages
          timeout=10
          elapsed=0
          while [ $elapsed -lt $timeout ]; do
            if grep -q "INFO:prompts-mcp:Starting prompts-mcp server with FastMCP" server.log && \
                grep -q "INFO:prompts-mcp:Using prompts directory:" server.log && \
                grep -q "INFO:prompts-mcp:Loaded.*prompts from" server.log; then
              echo "All required log messages found, stopping server"
              kill $SERVER_PID 2>/dev/null || true
              exit 0
            fi
            sleep 1
            elapsed=$((elapsed + 1))
          done

          echo "Timeout reached - required log messages not found within 10 seconds"
          kill $SERVER_PID 2>/dev/null || true
          exit 1

      - name: Start server (Windows)
        if: runner.os == 'Windows'
        run: |
          $env:PROMPTS_DIR = "$(Get-Location)\tests\test_prompts"
          $LOG_PATH = "$(Get-Location)\server.log"

          # Create empty log file first
          New-Item -Path $LOG_PATH -ItemType File -Force

          # Start server in background and append to log file
          $job = Start-Job -ScriptBlock {
            param($promptsDir, $logPath)
            $env:PROMPTS_DIR = $promptsDir
            uv run prompts-mcp >> $logPath 2>&1
          } -ArgumentList $env:PROMPTS_DIR, $LOG_PATH

          # Wait up to 10 seconds for all required log messages
          $timeout = 10
          $elapsed = 0
          while ($elapsed -lt $timeout) {
            if ((Select-String -Path $LOG_PATH -Pattern "INFO:prompts-mcp:Starting prompts-mcp server with FastMCP" -Quiet) -and
                (Select-String -Path $LOG_PATH -Pattern "INFO:prompts-mcp:Using prompts directory:" -Quiet) -and
                (Select-String -Path $LOG_PATH -Pattern "INFO:prompts-mcp:Loaded.*prompts from" -Quiet)) {
              Write-Host "All required log messages found, stopping server"
              Stop-Job $job
              Remove-Job $job
              exit 0
            }
            Start-Sleep -Seconds 1
            $elapsed++
          }

          Write-Host "Timeout reached - required log messages not found within 10 seconds"
          Stop-Job $job
          Remove-Job $job
          exit 1

      - name: Run dev.py
        run: uv run dev.py all
        env:
          PYTHONIOENCODING: utf-8

      - name: Run pre-commit hooks
        run: |
          uv run pre-commit run --all-files --verbose
