name: Setup development

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions: read-all

jobs:
  contributing:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v5

      - name: Install uv (macOS & Linux)
        if: runner.os != 'Windows'
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install uv (Windows)
        if: runner.os == 'Windows'
        run: |
          powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"

      - name: Install .python-version
        run: |
          uv python install

      - name: Start server (macOS & Linux)
        if: runner.os != 'Windows'
        run: |
          export PROMPTS_DIR="$(pwd)/tests/test_prompts"
          uv run prompts-mcp > server.log 2>&1 &
          SERVER_PID=$!
          sleep 3
          kill $SERVER_PID 2>/dev/null || true
          grep -q "INFO:prompts-mcp:Starting prompts-mcp server with FastMCP" server.log && \
          grep -q "INFO:prompts-mcp:Using prompts directory:" server.log && \
          grep -q "INFO:prompts-mcp:Loaded.*prompts from" server.log

      - name: Start server (Windows)
        if: runner.os == 'Windows'
        run: |
          $PROMPTS_DIR = "$(Get-Location)\tests\test_prompts"
          $env:PROMPTS_DIR = $PROMPTS_DIR
          Start-Job -ScriptBlock { uv run prompts-mcp > server.log 2>&1 }
          Start-Sleep -Seconds 3
          Stop-Job *
          Remove-Job *
          Select-String -Path server.log -Pattern "INFO:prompts-mcp:Starting prompts-mcp server with FastMCP" -Quiet
          Select-String -Path server.log -Pattern "INFO:prompts-mcp:Using prompts directory:" -Quiet
          Select-String -Path server.log -Pattern "INFO:prompts-mcp:Loaded.*prompts from" -Quiet

      - name: Run dev.py
        run:
          uv run dev.py all

      - name: Run pre-commit hooks
        run: |
          uv run pre-commit run --all-files --verbose
